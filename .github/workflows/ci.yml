name: CI/CD Pipeline for Dockerized CRUD App

on:
  push:
    branches:
      - main  # Trigger this on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to 'main' branch

jobs:
  # Push updated backend image to Docker Hub
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Generate .env file
      run: echo -e "DB_USER=postgres\nDB_PASSWORD=postgres\nDB_NAME=crudapp\nDB_HOST=db\nDB_PORT=5432" > .env

    - name: Verify .env file creation (for debugging)
      run: cat .env  # This will print the contents of the .env file

    - name: Upload .env file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: .env
          
    - name: Login Dockerhub
      env: 
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    - name: Build the Docker image
      run: docker compose -f docker-compose.yml build 

    - name: Push to dockerhub
      run: docker compose -f docker-compose.yml push

  deploy:
    runs-on: self-hosted
    needs: build  # Ensure that the build job runs before deploy

    steps:
    # Step 1: Download the .env file artifact
    - name: Download .env file
      uses: actions/download-artifact@v3
      with:
        name: env-file

    # Debugging Step: Check if .env file is downloaded
    - name: Verify .env file download (for debugging)
      run: cat .env  # This will print the contents of the .env file after download

    # Step 2: Pull Docker images using docker compose (V2)
    - name: Pull Docker images
      run: sudo docker compose -f docker-compose.yml pull

    # Step 3: Remove old containers using docker compose (V2)
    - name: Remove old containers
      run: sudo docker compose -f docker-compose.yml down --remove-orphans || true

    # Step 4: Build and run containers using docker compose (V2)
    - name: Build and run Docker containers
      run: sudo docker compose -f docker-compose.yml up -d --build
