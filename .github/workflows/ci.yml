name: CI/CD Pipeline for Dockerized CRUD App

on:
  push:
    branches:
      - main  # Trigger this on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to 'main' branch

jobs:
  # Push updated backend image to Docker Hub
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    # Generate .env file for the build
    - name: Generate .env file
      run: echo -e "DB_USER=postgres\nDB_PASSWORD=postgres\nDB_NAME=crudapp\nDB_HOST=db\nDB_PORT=5432" > .env

    # Check current directory and list files for debugging
    - name: Check working directory and files
      run: |
        echo "Checking the current working directory..."
        pwd
        echo "Listing files in the current directory..."
        ls -la

    # Login to Docker Hub
    - name: Login to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    # Build the Docker image
    - name: Build Docker image
      run: docker compose -f docker-compose.yml build 

    # Push the image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker compose -f docker-compose.yml push

    # Upload the .env file as an artifact for use in the deploy step
    - name: Upload .env file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: .env
        if-no-files-found: warn  # Will not fail if the .env file is not found
        include-hidden-files: false

  deploy:
    runs-on: self-hosted

    steps:
    # Step 1: Download the .env file artifact from the build job
    - name: Download .env file artifact
      uses: actions/download-artifact@v3
      with:
        name: env-file

    # Check working directory and list files for debugging
    - name: Check working directory and files
      run: |
        echo "Checking the current working directory..."
        pwd
        echo "Listing files in the current directory..."
        ls -la

    # Step 2: Pull Docker images using docker compose (V2)
    - name: Pull Docker images
      run: sudo docker compose -f docker-compose.yml pull

    # Step 3: Remove old containers using docker compose (V2)
    - name: Remove old containers
      run: sudo docker compose -f docker-compose.yml down --remove-orphans || true

    # Step 4: Build and run containers using docker compose (V2)
    - name: Build and run Docker containers
      run: sudo docker compose -f docker-compose.yml up -d --build
